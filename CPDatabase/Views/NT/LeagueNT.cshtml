@model NTsLeagueViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = @Localizer["LeaguesForNationalTeams"];
}

<h3>@Localizer["LeaguesForNationalTeams"]</h3>
<table class="table">
    <tr>
        <th>Id</th>
        <th><a asp-action="LeagueNT" asp-route-sortOrder="@Model.SortViewModel.NameSort">@Localizer["LeagueNT"]</a></th>
        <th><a asp-action="LeagueNT" asp-route-sortOrder="@Model.SortViewModel.YearSort">@Localizer["Year"]</a></th>
        <th><a asp-action="LeagueNT" asp-route-sortOrder="@Model.SortViewModel.PeriodSort">@Localizer["Period"]</a></th>
        <th><a asp-action="LeagueNT" asp-route-sortOrder="@Model.SortViewModel.GiggiSort">@Localizer["Giggiriva"]</a></th>
        <th><a asp-action="LeagueNT" asp-route-sortOrder="@Model.SortViewModel.JbouSort">@Localizer["Jbou41"]</a></th>
        <th><a asp-action="LeagueNT" asp-route-sortOrder="@Model.SortViewModel.ValSort">@Localizer["Valambrosio"]</a></th>
        <td></td>
    </tr>
    @foreach (var leagueNT in Model.LeaguesNT)
    {
        <tr>
            <td>@leagueNT.Id</td>
            <td>@leagueNT.LeagueNTName</td>
            <td>@leagueNT.Year</td>
            <td>@leagueNT.Period</td>
            <td>@leagueNT.Giggi</td>
            <td>@leagueNT.Jbou</td>
            <td>@leagueNT.Val</td>
            <td><a href="~/LeagueNT/View/@leagueNT.Id">@Localizer["Look"]</a></td>
        </tr>
    }
</table>
@if (Model.PageViewModel.TooFarToFirst)
{
    <a asp-action="LeagueNT" asp-route-page="1" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-secondary">1</a>
}
@if (Model.PageViewModel.HasPreviousPage3)
{
    <a asp-action="LeagueNT" asp-route-page="@(Model.PageViewModel.PageNumber - 3)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber - 3).ToString())</a>
}
@if (Model.PageViewModel.HasPreviousPage2)
{
    <a asp-action="LeagueNT" asp-route-page="@(Model.PageViewModel.PageNumber - 2)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber - 2).ToString())</a>
}
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="LeagueNT" asp-route-page="@(Model.PageViewModel.PageNumber - 1)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber - 1).ToString())</a>
}
<span class="btn">@Model.PageViewModel.PageNumber.ToString()</span>
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="LeagueNT" asp-route-page="@(Model.PageViewModel.PageNumber + 1)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber + 1).ToString())</a>
}
@if (Model.PageViewModel.HasNextPage2)
{
    <a asp-action="LeagueNT" asp-route-page="@(Model.PageViewModel.PageNumber + 2)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber + 2).ToString())</a>
}
@if (Model.PageViewModel.HasNextPage3)
{
    <a asp-action="LeagueNT" asp-route-page="@(Model.PageViewModel.PageNumber + 3)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber + 3).ToString())</a>
}
@if (Model.PageViewModel.TooFarToLast)
{
    <a asp-action="LeagueNT" asp-route-page="@Model.PageViewModel.TotalPages" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-secondary">@Model.PageViewModel.TotalPages.ToString()</a>
}