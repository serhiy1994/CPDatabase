@model TeamsClubViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = @Localizer["Clubs"];
}

<h3 class="text-center">@Localizer["Clubs"]</h3>
<div class="table-responsive-md">
    <table class="table table-sm table-striped table-hover table-bordered">
        <thead class="table-dark align-middle text-center">
            <tr>
                <th scope="col">Id</th>
                <th scope="col"><a asp-action="Club" asp-route-sortOrder="@Model.SortViewModel.NameSort">@Localizer["Club"]</a></th>
                <th scope="col"><a asp-action="Club" asp-route-sortOrder="@Model.SortViewModel.CountrySort">@Localizer["Country"]</a></th>
                <th scope="col"><a asp-action="Club" asp-route-sortOrder="@Model.SortViewModel.GiggiSort">@Localizer["Giggiriva"]</a></th>
                <th scope="col"><a asp-action="Club" asp-route-sortOrder="@Model.SortViewModel.JbouSort">@Localizer["Jbou41"]</a></th>
                <th scope="col"><a asp-action="Club" asp-route-sortOrder="@Model.SortViewModel.ValSort">@Localizer["Valambrosio"]</a></th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var club in Model.Clubs)
            {
                <tr>
                    <td>@club.Id</td>
                    <td>@club.ClubName</td>
                    <td>@club.Country</td>
                    <td>@club.Giggi</td>
                    <td>@club.Jbou</td>
                    <td>@club.Val</td>
                    <td><a href="~/Club/View/@club.Id">@Localizer["Look"]</a></td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="pagination justify-content-center">
    @if (Model.PageViewModel.TooFarToFirst)
    {
        <a asp-action="Club" asp-route-page="1" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-secondary">1</a>
    }
    @if (Model.PageViewModel.HasPreviousPage3)
    {
        <a asp-action="Club" asp-route-page="@(Model.PageViewModel.PageNumber - 3)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber - 3).ToString())</a>
    }
    @if (Model.PageViewModel.HasPreviousPage2)
    {
        <a asp-action="Club" asp-route-page="@(Model.PageViewModel.PageNumber - 2)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber - 2).ToString())</a>
    }
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Club" asp-route-page="@(Model.PageViewModel.PageNumber - 1)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber - 1).ToString())</a>
    }
    <span class="btn">@Model.PageViewModel.PageNumber.ToString()</span>
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Club" asp-route-page="@(Model.PageViewModel.PageNumber + 1)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber + 1).ToString())</a>
    }
    @if (Model.PageViewModel.HasNextPage2)
    {
        <a asp-action="Club" asp-route-page="@(Model.PageViewModel.PageNumber + 2)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber + 2).ToString())</a>
    }
    @if (Model.PageViewModel.HasNextPage3)
    {
        <a asp-action="Club" asp-route-page="@(Model.PageViewModel.PageNumber + 3)" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-outline-dark">@((Model.PageViewModel.PageNumber + 3).ToString())</a>
    }
    @if (Model.PageViewModel.TooFarToLast)
    {
        <a asp-action="Club" asp-route-page="@Model.PageViewModel.TotalPages" asp-route-sortOrder="@Model.SortViewModel.Current" class="btn btn-secondary">@Model.PageViewModel.TotalPages.ToString()</a>
    }
</div>