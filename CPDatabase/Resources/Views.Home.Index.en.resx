<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HelloWorld" xml:space="preserve">
    <value>Hello world!</value>
  </data>
  <data name="Message1" xml:space="preserve">
    <value>Welcome to the world of football history! Have you ever wondered what it would be like to play with the very first teams to grace the beautiful game? Well, wonder no more! The website you're in is here to offer you an immersive experience into the history of football, and all you need is an internet connection!</value>
  </data>
  <data name="Message2" xml:space="preserve">
    <value>In October 2013, a passionate Italian gamer of the FIFA series and a football history enthusiast began making a patch for FIFA 14 that would transport us to the past. Two other Italians later joined him, and their product has been maintained for almost 10 years.</value>
  </data>
  <data name="Message3" xml:space="preserve">
    <value>We are proud to present to you the FIFA 14 'History Of Football' patch, which brings together a complete collection of important teams from as far back as the 1870s. This patch was carefully crafted to ensure accuracy, data completion, and proper design, making it the perfect addition to your FIFA 14 gaming experience. You can now take on the role of legendary football pioneers and compete in matches that helped shape the game we all love today.</value>
  </data>
  <data name="Message4" xml:space="preserve">
    <value>But that's not all! The website (which has been made by a fan of the patch) offers a unique experience for those who love football history but may not  necessarily enjoy video games. We have meticulously documented every team, player, and match to give you a glimpse into the evolution of football. You can browse through the history of football at your own pace, discovering interesting facts and learning about the pioneers who helped shape the sport we all love.</value>
  </data>
  <data name="Message5" xml:space="preserve">
    <value>Please note: The patch has two versions - one for FIFA 14 and one for FIFA 16. The FIFA 14 version is primary, while the other one is copied from the main version from time to time. Currently, only the FIFA 14 version is supported on the site.</value>
  </data>
  <data name="Message6" xml:space="preserve">
    <value>We have also included visual representations for some additional add-ons created by other fans: the '2010s addon' by Jbou41 and the '21st century addon' by Valambrosio. These add-ons were not included in the 'canon' and are maintained separately, but can be installed over the main content.</value>
  </data>
  <data name="Message7part1" xml:space="preserve">
    <value>Enjoy your exploration of football history on our website. We hope you have a fantastic experience and gain a deeper appreciation for the game's rich and fascinating past. If you have any questions or feedback, please don't hesitate to</value>
  </data>
  <data name="Link1" xml:space="preserve">
    <value>reach out</value>
  </data>
  <data name="Message7part2" xml:space="preserve">
    <value>to us.</value>
  </data>
  <data name="Message8" xml:space="preserve">
    <value>Thank you for visiting our site!</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
</root>